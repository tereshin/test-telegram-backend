<?php

class WeatherService {
    
    private $apiUrl;
    
    public function __construct() {
        $this->apiUrl = OPEN_METEO_API;
    }
    
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞
     */
    public function getWeather($lat, $lon, $timezone) {
        $params = array(
            'latitude' => $lat,
            'longitude' => $lon,
            'current_weather' => 'true',
            'hourly' => 'temperature_2m,relative_humidity_2m,surface_pressure,precipitation,weather_code',
            'timezone' => $timezone,
            'forecast_days' => 1
        );
        
        $url = $this->apiUrl . '?' . http_build_query($params);
        
        $options = array(
            'http' => array(
                'method' => 'GET',
                'timeout' => 10
            )
        );
        
        $context = stream_context_create($options);
        $response = file_get_contents($url, false, $context);
        
        if ($response === FALSE) {
            return null;
        }
        
        $data = json_decode($response, true);
        
        if (!$data || !isset($data['current_weather'])) {
            return null;
        }
        
        return $this->formatWeatherData($data, $timezone);
    }
    
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
     */
    private function formatWeatherData($data, $timezone) {
        $current = $data['current_weather'];
        $hourly = $data['hourly'];
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Å
        $currentTime = new DateTime('now', new DateTimeZone($timezone));
        $currentHour = (int)$currentTime->format('H');
        
        // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Å–∞
        $hourIndex = 0;
        for ($i = 0; $i < count($hourly['time']); $i++) {
            $hourTime = new DateTime($hourly['time'][$i]);
            if ($hourTime->format('H') == $currentHour) {
                $hourIndex = $i;
                break;
            }
        }
        
        $temperature = round($current['temperature']);
        $humidity = isset($hourly['relative_humidity_2m'][$hourIndex]) ? 
                   round($hourly['relative_humidity_2m'][$hourIndex]) : '–ù/–î';
        $pressure = isset($hourly['surface_pressure'][$hourIndex]) ? 
                   round($hourly['surface_pressure'][$hourIndex]) : '–ù/–î';
        $precipitation = isset($hourly['precipitation'][$hourIndex]) ? 
                        $hourly['precipitation'][$hourIndex] : 0;
        $weatherCode = $current['weathercode'];
        
        return array(
            'temperature' => $temperature,
            'humidity' => $humidity,
            'pressure' => $pressure,
            'precipitation' => $precipitation,
            'weather_description' => $this->getWeatherDescription($weatherCode),
            'wind_speed' => round($current['windspeed']),
            'current_time' => $currentTime->format('d.m.Y H:i')
        );
    }
    
    /**
     * –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã –ø–æ –∫–æ–¥—É WMO
     */
    private function getWeatherDescription($code) {
        $descriptions = array(
            0 => '‚òÄÔ∏è –Ø—Å–Ω–æ',
            1 => 'üå§Ô∏è –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —è—Å–Ω–æ',
            2 => '‚õÖ –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å',
            3 => '‚òÅÔ∏è –ü–∞—Å–º—É—Ä–Ω–æ',
            45 => 'üå´Ô∏è –¢—É–º–∞–Ω',
            48 => 'üå´Ô∏è –ò–∑–º–æ—Ä–æ–∑—å',
            51 => 'üå¶Ô∏è –°–ª–∞–±–∞—è –º–æ—Ä–æ—Å—å',
            53 => 'üå¶Ô∏è –£–º–µ—Ä–µ–Ω–Ω–∞—è –º–æ—Ä–æ—Å—å',
            55 => 'üå¶Ô∏è –°–∏–ª—å–Ω–∞—è –º–æ—Ä–æ—Å—å',
            56 => 'üå®Ô∏è –°–ª–∞–±–∞—è –ª–µ–¥—è–Ω–∞—è –º–æ—Ä–æ—Å—å',
            57 => 'üå®Ô∏è –°–∏–ª—å–Ω–∞—è –ª–µ–¥—è–Ω–∞—è –º–æ—Ä–æ—Å—å',
            61 => 'üåßÔ∏è –°–ª–∞–±—ã–π –¥–æ–∂–¥—å',
            63 => 'üåßÔ∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å',
            65 => 'üåßÔ∏è –°–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å',
            66 => 'üå®Ô∏è –°–ª–∞–±—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å',
            67 => 'üå®Ô∏è –°–∏–ª—å–Ω—ã–π –ª–µ–¥—è–Ω–æ–π –¥–æ–∂–¥—å',
            71 => '‚ùÑÔ∏è –°–ª–∞–±—ã–π —Å–Ω–µ–≥',
            73 => '‚ùÑÔ∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π —Å–Ω–µ–≥',
            75 => '‚ùÑÔ∏è –°–∏–ª—å–Ω—ã–π —Å–Ω–µ–≥',
            77 => '‚ùÑÔ∏è –°–Ω–µ–∂–Ω—ã–µ –∑–µ—Ä–Ω–∞',
            80 => 'üå¶Ô∏è –°–ª–∞–±—ã–µ –ª–∏–≤–Ω–∏',
            81 => 'üå¶Ô∏è –£–º–µ—Ä–µ–Ω–Ω—ã–µ –ª–∏–≤–Ω–∏',
            82 => 'üå¶Ô∏è –°–∏–ª—å–Ω—ã–µ –ª–∏–≤–Ω–∏',
            85 => '‚ùÑÔ∏è –°–ª–∞–±—ã–µ —Å–Ω–µ–∂–Ω—ã–µ –ª–∏–≤–Ω–∏',
            86 => '‚ùÑÔ∏è –°–∏–ª—å–Ω—ã–µ —Å–Ω–µ–∂–Ω—ã–µ –ª–∏–≤–Ω–∏',
            95 => '‚õàÔ∏è –ì—Ä–æ–∑–∞',
            96 => '‚õàÔ∏è –ì—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º',
            99 => '‚õàÔ∏è –°–∏–ª—å–Ω–∞—è –≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º'
        );
        
        return isset($descriptions[$code]) ? $descriptions[$code] : 'üå•Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
}

?> 